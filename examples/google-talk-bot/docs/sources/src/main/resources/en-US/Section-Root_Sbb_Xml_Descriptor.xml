<?xml version='1.0'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "JAIN_SLEE_Example_User_Guide.ent">
%BOOK_ENTITIES;
]>

<section id="root_sbb_descriptor">
			<title>Root SBB XML Descriptor</title>
			<para>The Root SBB XML Descriptor has to be provided and match the abstract class code.</para>
		
			<para>First relevant part is the declaration of the <literal>sbb-classes</literal> element, where the sbb class abstract name must be specified:</para>
			<programlisting language="XML" role="XML"><![CDATA[
		<sbb-classes>
			<sbb-abstract-class>
				<sbb-abstract-class-name>
					GoogleTalkBotSbb
				</sbb-abstract-class-name>
			</sbb-abstract-class>
		</sbb-classes>]]>
			</programlisting>
			
			<para>Then the events handled by the SBB must be specified too:</para>
			<programlisting language="XML" role="XML"><![CDATA[
		<event event-direction="Receive" initial-event="True">
			<event-name>StartServiceEvent</event-name>
			<event-type-ref>
				<event-type-name>
					javax.slee.serviceactivity.ServiceStartedEvent
				</event-type-name>
				<event-type-vendor>javax.slee</event-type-vendor>
				<event-type-version>1.1</event-type-version>
			</event-type-ref>
			<initial-event-select variable="ActivityContext" />
		</event>
		<event event-direction="Receive" initial-event="False">
			<event-name>ActivityEndEvent</event-name>
			<event-type-ref>
				<event-type-name>
					javax.slee.ActivityEndEvent
				</event-type-name>
				<event-type-vendor>javax.slee</event-type-vendor>
				<event-type-version>1.0</event-type-version>
			</event-type-ref>
		</event>
		<event event-direction="Receive" initial-event="False">
			<event-name>Message</event-name>
			<event-type-ref>
				<event-type-name>
					org.jivesoftware.smack.packet.Message
				</event-type-name>
				<event-type-vendor>
					org.jivesoftware.smack
				</event-type-vendor>
				<event-type-version>1.0</event-type-version>
			</event-type-ref>
		</event>
		<event event-direction="Receive" initial-event="False">
			<event-name>Presence</event-name>
			<event-type-ref>
				<event-type-name>
					org.jivesoftware.smack.packet.Presence
				</event-type-name>
				<event-type-vendor>
					org.jivesoftware.smack
				</event-type-vendor>
				<event-type-version>1.0</event-type-version>
			</event-type-ref>
		</event>]]>
			</programlisting>
			<para>Note that there is a single event defined as initial, which triggers the xmpp connection creation, remaining events all happen in the XMPP connection activity, that the service instance is already attached.</para>
	
			<para>Next are the <literal>env-entries</literal>, which are used as configuration properties, and contains the Google Talk account credentials:</para>
			<programlisting language="XML" role="XML"><![CDATA[
		<env-entry>
			<env-entry-name>username</env-entry-name>
			<env-entry-type>java.lang.String</env-entry-type>
			<env-entry-value>slee.gtalk.bot</env-entry-value>
		</env-entry>

		<env-entry>
			<env-entry-name>password</env-entry-name>
			<env-entry-type>java.lang.String</env-entry-type>
			<env-entry-value>m0b1c3nts</env-entry-value>
		</env-entry>]]>
			</programlisting>
			
			<para>Finally, the XMPP Resource Adaptor must be specified also, otherwise SLEE won't put its SBB Interface in the SBB's JNDI Context:</para>
			<programlisting language="XML" role="XML"><![CDATA[
		<resource-adaptor-type-binding>
			<resource-adaptor-type-ref>
				<resource-adaptor-type-name>
					XMPPResourceAdaptorType
				</resource-adaptor-type-name>
				<resource-adaptor-type-vendor>
					org.restcomm
				</resource-adaptor-type-vendor>
				<resource-adaptor-type-version>
					2.0
				</resource-adaptor-type-version>
			</resource-adaptor-type-ref>
			<activity-context-interface-factory-name>
				slee/resources/xmpp/2.0/factoryprovider
			</activity-context-interface-factory-name>
			<resource-adaptor-entity-binding>
				<resource-adaptor-object-name>
					slee/resources/xmpp/2.0/xmppinterface
				</resource-adaptor-object-name>
				<resource-adaptor-entity-link>
					XMPPRA
				</resource-adaptor-entity-link>
			</resource-adaptor-entity-binding>
		</resource-adaptor-type-binding>]]>
			</programlisting>
			
		</section>