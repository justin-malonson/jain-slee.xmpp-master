<?xml version='1.0'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [<!ENTITY % BOOK_ENTITIES SYSTEM "JAIN_SLEE_Example_User_Guide.ent">%BOOK_ENTITIES;]>

<chapter id="source_code_overview">

	<title>Source Code Overview</title>
	
	<para>The example application is defined by a service descriptor, which refers the Root SBB. The Root SBB does not defines child relations, which means the application is a single SBB.</para>
		
	<important>
		<para>To obtain the example's complete source code please refer to <xref linkend="source_code"/>.</para>
	</important>
	
	<section id="service_descriptor">
		
		<title>Service Descriptor</title>
		
		<para>The service descriptor is plain simple, it just defines the service ID, the ID of the root SBB and its default priority. The complete XML is:</para>
		
		<programlisting language="XML" role="XML"><![CDATA[
<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE service-xml PUBLIC 
	"-//Sun Microsystems, Inc.//DTD JAIN SLEE Service 1.1//EN"
    "http://java.sun.com/dtd/slee-service-xml_1_1.dtd">
<service-xml>
	<service>
		<description />
		<service-name>GoogleTalkBotService</service-name>
		<service-vendor>restcomm</service-vendor>
		<service-version>0.1</service-version>
		<root-sbb>
			<description />
			<sbb-name>GoogleTalkBotSbb</sbb-name>
			<sbb-vendor>restcomm</sbb-vendor>
			<sbb-version>0.1</sbb-version>
		</root-sbb>
		<default-priority>0</default-priority>
	</service>
</service-xml>]]>
		</programlisting>		
		
	</section>
	
	<section id="root_sbb">
	
		<title>The Root SBB</title>
		<para>The &THIS.EXAMPLE; Example's Root SBB is composed by the abstract class and the XML descriptor.</para>
		
		<xi:include
		xmlns:xi="http://www.w3.org/2001/XInclude"
		href="Section-Root_Sbb_Abstract_Class.xml" />
	
		<xi:include
		xmlns:xi="http://www.w3.org/2001/XInclude"
		href="Section-Root_Sbb_Xml_Descriptor.xml" />
				
	</section>
	
</chapter>

