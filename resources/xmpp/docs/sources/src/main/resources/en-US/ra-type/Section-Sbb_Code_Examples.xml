<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [<!ENTITY % BOOK_ENTITIES SYSTEM "../User_Guide.ent">%BOOK_ENTITIES;]>

<section id="ratype_sbb_code_examples">

	<title>Sbb Code Examples</title>

	<para>The following code examples shows how to use the Resource Adaptor Type for common functionalities</para>
	
	<section id="ratype_sbb_code_examples_create_connection">

		<title>Connection Creation</title>

		<para>The following code examples the creation of a client XMPP connection and attachment to the related activity context. The <literal>xmppSbbInterface</literal> object is the RA SBB Interface, while the object <literal>xmppActivityContextInterfaceFactory</literal> is the RA Activity Context Interface Factory, both obtained through the SBB JNDI environment.</para>
		
		<programlisting language="Java" role="JAVA">
			<![CDATA[
	try {		
		XmppConnection connection = xmppSbbInterface.connectClient(
				connectionID, serviceHost, servicePort, serviceName,
				username, password, resource, Arrays
						.asList(packetsToListen));
		xmppActivityContextInterfaceFactory.getActivityContextInterface(
				connection).attach(sbbContext.getSbbLocalObject());
	} catch (XMPPException e) {
		tracer.severe("Connection to server failed!",e);
	}]]>
		</programlisting>
	</section>

	<section id="ratype_sbb_code_examples_send_message">

		<title>Message Sending</title>

		<para>The following code examples the sending of a XMPP message, through the RA SBB Interface:</para>
		
		<programlisting language="Java" role="JAVA">
			<![CDATA[
	String connectionID = getXmppConnectionID();
	String targetXmppUser = getTargetXmppUser();
	Message msg = new Message(targetXmppUser, Message.Type.CHAT);
	msg.setBody("Hello");
	xmppSbbInterface.sendPacket(connectionID, msg);]]>
		</programlisting>
	</section>
	
</section>